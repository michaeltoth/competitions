// This program finds the first triangle number which contains more than n divisors
// A triangle number is one generated by adding the first k consecutive integers
// The first triangle numbers are 1, 3, 6, 10, 15, 21, 28

public class Triangle {
  public static int numDivisors = 500;
	
	public static int findDivisors(int number){
		int divisors = 0;
		for(int i=1;i<=Math.sqrt(number);i++){
			if(number/i == i) //The number is a square root
				divisors += 1;
			else if(number%i==0){ //Add the divisor i and the divisor number/i
				divisors += 2;
			}
		}
		return divisors;
	}
	
	public static int triangleNum(int x){
		int triangle = 1; //1 is the first triangle number
		int counter = 2; // Counter starts at position 2 because triangle is already at 1
		while(findDivisors(triangle)<=x){
			triangle += counter;
			counter++;
			findDivisors(triangle);
		}
		return triangle;
	}
	
	public static void main(String[] args){
		int solution = triangleNum(numDivisors);
		System.out.println(solution);
	}
}
